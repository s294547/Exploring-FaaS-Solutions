apiVersion: apps/v1
kind: Deployment
metadata:
  name: kube-state-metrics-exporter
  labels: {{ include "app.labels" . | nindent 4 }}
    app.kubernetes.io/component: kube-state-metrics
spec:
  selector:
    matchLabels: {{ include "app.labels" . | nindent 6 }}
      app.kubernetes.io/component: kube-state-metrics
  replicas: 1
  template:
    metadata:
      labels: {{ include "app.labels" . | nindent 8 }}
        app.kubernetes.io/component: kube-state-metrics
      annotations:
        generation: "{{ .Release.Revision }}"
    spec:
      hostNetwork: false
      serviceAccountName: kube-state-metrics-exporter
      # securityContext:
      #   fsGroup: 65534
      #   runAsGroup: 65534
      #   runAsUser: 65534
      containers:
      - name: kube-state-metrics
        args:
        - --port=8080
        - --resources=certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,jobs,leases,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments
        imagePullPolicy: IfNotPresent
        image: "registry.k8s.io/kube-state-metrics/kube-state-metrics:v2.8.0"
        ports:
        - containerPort: 8080
          name: "http"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 5
          timeoutSeconds: 5
